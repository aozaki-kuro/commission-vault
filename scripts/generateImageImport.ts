import fs from 'fs'
import path from 'path'
import { commissionData } from '../data/commissionData'

const outputFilePath = path.join(__dirname, '../data/imageImports.ts')

const generateImports = () => {
  const importNames = new Set<string>()
  const importStatements: string[] = []
  const exportMappings: string[] = []

  commissionData.forEach(characterData => {
    characterData.Commissions.forEach(commission => {
      const fileNamePrefix = commission.fileName.split('_')[0]
      const importName = `A${fileNamePrefix}`

      if (!importNames.has(importName)) {
        importNames.add(importName)
        const sanitizedFileName = commission.fileName.replace(/'/g, "\\'")
        importStatements.push(`import ${importName} from '#images/webp/${sanitizedFileName}.webp'`)
      }

      const key = commission.fileName.includes("'")
        ? `"${commission.fileName}"`
        : `'${commission.fileName}'`
      exportMappings.push(`  ${key}: ${importName},`)
    })
  })

  const fileContent = `// This file is auto-generated by the script at script/generateImageImports.ts
// !!! DO NOT EDIT !!!

${importStatements.join('\n')}

export const imageImports = {
${exportMappings.join('\n')}
}
`

  fs.writeFileSync(outputFilePath, fileContent, 'utf-8')
  console.log(`Image imports generated and saved to ${outputFilePath}`)
}

generateImports()
