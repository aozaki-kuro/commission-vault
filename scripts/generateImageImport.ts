import fs from 'fs'
import path from 'path'

const imagesDir = path.join(__dirname, '../public/images')
const outputFilePath = path.join(__dirname, '../data/imageImports.ts')

const generateImports = () => {
  // 获取 public/images 目录下所有的 jpg 文件
  const files = fs.readdirSync(imagesDir).filter(file => file.endsWith('.jpg'))

  // 准备写入文件的字符串
  let fileContent = `// This file is auto-generated by the script at script/generateImageImports.ts\n\n`

  files.forEach(file => {
    // 将文件名转换为导入名称，去掉扩展名
    const fileNameWithoutExt = file.replace('.jpg', '')
    const importName = `A${fileNameWithoutExt.replace(/[^a-zA-Z0-9]/g, '')}`

    // 写入 import 语句
    fileContent += `import ${importName} from '#images/${file}'\n`
  })

  // 写入导出对象
  fileContent += `\nexport const imageImports = {\n`

  files.forEach(file => {
    const fileNameWithoutExt = file.replace('.jpg', '')
    const importName = `A${fileNameWithoutExt.replace(/[^a-zA-Z0-9]/g, '')}`

    // 如果文件名中包含单引号，则使用双引号包围
    const key = fileNameWithoutExt.includes("'")
      ? `"${fileNameWithoutExt}"`
      : `'${fileNameWithoutExt}'`

    fileContent += `  ${key}: ${importName},\n`
  })

  fileContent += `};\n`

  // 将生成的内容写入文件
  fs.writeFileSync(outputFilePath, fileContent, 'utf-8')
  console.log(`Image imports generated and saved to ${outputFilePath}`)
}

generateImports()
